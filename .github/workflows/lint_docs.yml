---

name: Lint documentation

on:
  workflow_call:
    inputs:
      collection-namespace:
        description: |
          The namespace of the collection.
        required: false
        type: string
        default: cloudera
      collection-name:
        description: |
          The name of the collection within the namespace.
        required: true
        type: string
      antsibull-log-upload:
        description: |
          If 'true', the antsibull-doc log will be uploaded as an artifact.
        required: false
        type: boolean
        default: false
      antsibull-docs-repository:
        description: |
          The repository and project for antsibull-docs to install via Pip.
        required: false
        type: string
        default: cloudera-labs/antsibull-docs
      antsibull-docs-version:
        description: |
          The version of antsibull-docs within the antsibull-docs-repository to install via Pip.
        required: false
        type: string
        default: cldr-docsite

jobs:
  lint-ansible-docs:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Configure environment
        id: vars
        uses: actions/github-script@v6
        with:
          script: |
            name = process.env.GITHUB_REPOSITORY.split('/')[1]
            path = name.replace('.', '/')

            core.exportVariable('ANSIBLE_COLLECTIONS_PATHS', process.env.GITHUB_WORKSPACE)

            const checkoutPath = `ansible_collections/${path}`
            core.setOutput('checkout-path', checkoutPath)

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.11

      - name: Install Ansible
        run: pip install ansible-core https://github.com/${{ inputs.antsibull-docs-repository }}/archive/${{ inputs.antsibull-docs-version }}.tar.gz

      - name: Display Ansible details
        run: ansible --version

      - name: Checkout project
        uses: actions/checkout@v3
        with:
          path: ${{ steps.vars.outputs.checkout-path }}

      - name: Install Python requirements
        run: pip install -r requirements.txt
        working-directory: ${{ steps.vars.outputs.checkout-path }}/docsbuild

      - name: Execute antsibull-docs with --fail-on-error
        run: |
          echo "Building ${{ inputs.collection-namespace}}.${{ inputs.collection-name }}"
          mkdir -p temp-rst
          chmod og-w temp-rst
          antsibull-docs \
            --config-file antsibull-docs.cfg \
            collection \
            --use-current \
            --squash-hierarchy \
            --dest-dir temp-rst \
            --fail-on-error \
            ${{ inputs.collection-namespace }}.${{ inputs.collection-name }}
        working-directory: ${{ steps.vars.outputs.checkout-path }}/docsbuild

      - name: Upload antsibull-doc log artifact
        if: always() && inputs.antsibull-log-upload
        uses: actions/upload-artifact@v3
        with:
          path: ${{ steps.vars.outputs.checkout-path }}/docsbuild/antsibull.log
          name: antsibull-${{ github.sha }}.log
          retention-days: 7
